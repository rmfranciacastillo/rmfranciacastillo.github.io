{"version":3,"sources":["reducers/FetchReducer.js","actions/types.js","reducers/index.js","store.js","actions/FetchAction.js","components/Quote.js","components/QuoteController.js","components/QuoteContainer.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","color","quoteInfo","fetchReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","combineReducers","settings","FetchReducer","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","fetchQuote","dispatch","fetch","then","res","json","quote","changeColor","Math","floor","random","Quote","style","this","props","_this$props$quoteInfo","author","react_default","a","createElement","className","Component","connect","QuoteController","_this","QuoteController_classCallCheck","QuoteController_getPrototypeOf","call","handleClick","bind","QuoteController_assertThisInitialized","backgroundColor","letterStyle","text","concat","dist_default","hashtags","via","link","href","target","onClick","QuoteContainer","src_components_Quote","src_components_QuoteController","App","src_components_QuoteContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","es","src_App_0","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bcfc98c7.chunk.js","sourcesContent":["import { FETCH_QUOTE, CHANGE_COLOR } from '../actions/types';\n\nconst initialState = {\n\tcolor: '',\n\tquoteInfo: ''\n}\n\nconst fetchReducer = (state = initialState, action) => {\n\t\n\tswitch(action.type){\n\t\tcase FETCH_QUOTE: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquoteInfo: action.payload\n\t\t\t};\n\n\t\tcase CHANGE_COLOR: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcolor: action.payload\n\t\t\t};\n\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport default fetchReducer; \n","export const FETCH_QUOTE = 'FETCH_QUOTE';\nexport const CHANGE_COLOR = 'CHANGE_COLOR';\n","import { combineReducers } from 'redux';\nimport FetchReducer from './FetchReducer';\n\nexport default combineReducers({\n\tsettings: FetchReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\trootReducer, \n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nexport default store;\n","import { FETCH_QUOTE, CHANGE_COLOR } from './types';\n\nexport const fetchQuote = () => dispatch => {\n\n\tfetch('https://talaikis.com/api/quotes/random/')\n\t\t.then(res => res.json())\n\t\t.then(quote => dispatch({\n\t\t\ttype: FETCH_QUOTE,\n\t\t\tpayload: quote\n\t\t}));\n};\n\nexport const changeColor = () => dispatch => {\n\t\n\tconst backgroundColor = [\n\t\t\"antiquewhite\": \"#faebd7\",\n\t\t\"aqua\": \"#00ffff\",\n\t\t\"aquamarine\": \"#7fffd4\",\n\t\t\"beige\": \"#f5f5dc\",\n\t\t\"bisque\": \"#ffe4c4\",\n\t\t\"black\": \"#000000\",\n\t\t\"blue\": \"#0000ff\",\n\t\t\"blueviolet\": \"#8a2be2\",\n\t\t\"brown\": \"#a52a2a\",\n\t\t\"chocolate\": \"#d2691e\",\n\t\t\"burlywood\": \"#deb887\",\n\t\t\"burlywood\": \"#deb887\",\n\t\t\"cadetblue\": \"#5f9ea0\",\n\t\t\"chartreuse\": \"#7fff00\",\n\t\t\"cadetblue\": \"#5f9ea0\",\n\t\t\"chartreuse\": \"#7fff00\",\n\t]; \n\t\n\tdispatch({\n\t\ttype: CHANGE_COLOR,\n\t\tpayload: backgroundColor[Math.floor(Math.random() * 14)]\n\t});\n};\n\n\n","import React, { Component }  from 'react';\nimport { connect } from 'react-redux';\nimport './Quote.css';\n\nclass Quote extends Component {\n\n\trender() {\n\t\tconst style = { \n\t\t\tcolor: this.props.color\n\t\t}\n\n\t\tconst {quote, author} = this.props.quoteInfo;\n\n\t\treturn (\n\t\t\t<div className=\"quote\" style={ style }>\n\t\t\t\t<i className=\"fas fa-quote-left\" ></i>\n\t\t\t\t<h1 className=\"quote-text\" >{quote}</h1>\n\t\t\t\t<h2 className=\"quote-author\">- {author}</h2>\n\t\t\t</div>\n\t\t);\t\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tquoteInfo: state.settings.quoteInfo,\n\tcolor: state.settings.color\n});\n\nexport default connect(mapStateToProps, null)(Quote);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ShareLink from 'react-twitter-share-link';\n\nimport { changeColor, fetchQuote } from '../actions/FetchAction';\n\nimport './QuoteController.css';\n\nclass QuoteController extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\t\n\thandleClick(){\n\t\tthis.props.fetchQuote();\n\t\tthis.props.changeColor();\n\t}\n\n\trender(){\n\t\t\n\t\tconst style = { \n\t\t\tbackgroundColor: this.props.color \n\t\t}\n\n\t\tconst letterStyle = {\n\t\t\tcolor: this.props.color\n\t\t}\n\n\t\tconst { author, quote } = this.props.quoteInfo;\n\t\tlet text = `${quote} - ${author}`;\n\n\t\treturn (\n\t\t\t<div className=\"quote-controller\" >\n\t\t\t\t<div className=\"social-links\">\n\n\t\t\t\t\t<ShareLink \n\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\thashtags= {['freecodecamp', 'quotes']}\n\t\t\t\t\t\tvia=\"RenatoFranciaC\"\n\t\t\t\t\t\t>\n\t\t\t\t\t   {link => (\n\t\t\t\t\t\t\t<a href={link} \n\t\t\t\t\t\t\t\tstyle={ letterStyle }\n\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fab fa-twitter-square\"></i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ShareLink>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"reset-quote\" \n\t\t\t\t\tstyle={style}\n\t\t\t\t\tonClick={this.handleClick}>New Quote</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tcolor: state.settings.color,\n\tquoteInfo: state.settings.quoteInfo\n});\n\nexport default connect(mapStateToProps, {changeColor, fetchQuote})(QuoteController);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './QuoteContainer.css';\n\nimport Quote from './Quote';\nimport QuoteController from './QuoteController';\n\nclass QuoteContainer extends Component {\n\n\t\n\trender(){\n\t\t\n\t\tlet style = {\n\t\t\tbackgroundColor: this.props.color\t\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"quote-container\">\n\t\t\t\t<Quote style={style} />\n\t\t\t\t<QuoteController style={style} />\n\t\t\t</div>\n\t\t);\t\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tcolor: state.settings.color \n});\n\nexport default connect(mapStateToProps, null)(QuoteContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchQuote, changeColor } from './actions/FetchAction';\nimport './App.css';\n\nimport QuoteContainer from './components/QuoteContainer';\n\t\nclass App extends Component {\n\n  componentWillMount(){\n\tthis.props.fetchQuote();\n\tthis.props.changeColor();\n  }\n\n  render() {\n\n\tlet style={\n\t\tbackgroundColor: this.props.color\n\t}\n\n    return (\n      <div className=\"App\" style={ style }>\n\t  \t<QuoteContainer />\n\t  </div>\n    );\n  }\n}\n\nApp.propTypes =  {\n\tfetchQuote: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tcolor: state.settings.color\t\n});\n\nexport default connect(mapStateToProps, {fetchQuote, changeColor})(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}