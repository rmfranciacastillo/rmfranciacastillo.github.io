{"version":3,"sources":["components/button-pad/ButtonPad.js","actions/SettingsAction.js","actions/types.js","components/control-pad/ControlPad.js","reducers/SettingsReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["ButtonPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyPress","bind","assertThisInitialized","handleClick","qRef","React","createRef","wRef","eRef","aRef","sRef","dRef","zRef","xRef","cRef","bank1","name","url","bank2","document","addEventListener","e","key","current","click","audio","bank","bankOn","powerOn","target","Audio","volume","play","updateButtonText","console","log","react_default","a","createElement","className","onClick","ref","Component","connect","state","settings","text","dispatch","type","payload","ControlPad","onPowerToggle","onBankToggle","onVolumeSlide","powerToggle","bankToggle","volumeChange","value","setState","id","onChange","htmlFor","btext","max","min","initialState","combineReducers","arguments","length","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_button_pad_ButtonPad","components_control_pad_ControlPad","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5c214d9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateButtonText }  from '../../actions/SettingsAction';\n\nimport './ButtonPad.css';\n\nclass ButtonPad extends Component {\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\t\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\n\t\tthis.qRef = React.createRef();\n\t\tthis.wRef = React.createRef();\n\t\tthis.eRef = React.createRef();\n\t\tthis.aRef = React.createRef();\n\t\tthis.sRef = React.createRef();\n\t\tthis.dRef = React.createRef();\n\t\tthis.zRef = React.createRef();\n\t\tthis.xRef = React.createRef();\n\t\tthis.cRef = React.createRef();\n\t\t\n\t\tthis.bank1 = [\n\t\t\t{\n\t\t\t\tname: 'Heater-1',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Heater-2',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Heater-3',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Heater-4',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Clap',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Open HH',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Kick N\\' Hat',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Kick',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Closed HH',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n\t\t\t}\n\t\t];\n\t\t\n\t\tthis.bank2 = [\n\t\t\t{\n\t\t\t\tname: 'Chord-1',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chord-2',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Chord-3',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Shaker',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Open-HH',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Closed-HH',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Punchy-Kick',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Side-Stick',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: 'Snare',\n\t\t\t\turl: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n\t\t\t}\n\t\t\n\t\t];\n\n\t}\n\n\tcomponentWillMount(){\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyPress.bind(this));\n\t}\n\n\thandleKeyPress(e){\n\n\t\tswitch(e.key){\n\t\t\tcase 'q':\n\t\t\t\tthis.qRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\t\tthis.wRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\tthis.eRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tthis.aRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tthis.sRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tthis.dRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.zRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\t\tthis.xRef.current.click();\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tthis.cRef.current.click();\n\t\t\t\tbreak;\n\t\t\tdefault:\t\n\t\t}\n\t}\n\t\n\thandleClick(e){\n\n\t\tlet audio;\n\t\tlet bank = this.props.bankOn? this.bank2 : this.bank1;\n\n\t\tif(!this.props.powerOn)\n\t\t\treturn;\n\t\t\n\t\tswitch(e.target.name){\n\t\t\tcase 'q':\n\t\t\t\taudio = new Audio(bank[0].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[0].name);\n\t\t\t\tbreak;\n\t\t\tcase 'w':\n\t\t\t\taudio = new Audio(bank[1].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[1].name);\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\taudio = new Audio(bank[2].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[2].name);\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\taudio = new Audio(bank[3].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[3].name);\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\taudio = new Audio(bank[4].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[4].name);\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\taudio = new Audio(bank[5].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[5].name);\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\taudio = new Audio(bank[6].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[6].name);\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\t\taudio = new Audio(bank[7].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[7].name);\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\taudio = new Audio(bank[8].url);\n\t\t\t\taudio.volume = this.props.volume;\n\t\t\t\taudio.play();\n\t\t\t\tthis.props.updateButtonText(bank[8].name);\n\t\t\t\tbreak;\n\t\t\tdefault: \n\t\t\t\tconsole.log('Not applicable');\n\t\t}\n\t\t\n\t}\n\n\trender(){\n\n\t\treturn (\n\t\t\t<div className=\"ButtonPad\" >\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='q'\n\t\t\t\t\tref={this.qRef}>Q</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='w'\n\t\t\t\t\tref={this.wRef}>W</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='e'\n\t\t\t\t\tref={this.eRef}>E</button>\n\n\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='a'\n\t\t\t\t\tref={this.aRef}>A</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='s'\n\t\t\t\t\tref={this.sRef}>S</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='d'\n\t\t\t\t\tref={this.dRef}>D</button>\n\t\t\t\t\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='z'\n\t\t\t\t\tref={this.zRef}>Z</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='x'\n\t\t\t\t\tref={this.xRef}>X</button>\n\t\t\t\t<button \n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tclassName={`btn`}\n\t\t\t\t\tname='c'\n\t\t\t\t\tref={this.cRef}>C</button>\n\t\t\t</div>\n\t\t);\t\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tvolume: state.settings.volume,\n\tbankOn: state.settings.bankOn,\n\tpowerOn: state.settings.powerOn\n});\n\nexport default connect(mapStateToProps, {updateButtonText})(ButtonPad);\n\n\n","import { POWER_TOGGLE, BANK_TOGGLE, CHANGE_VOLUME, DISPLAY_BUTTON_NAME } from './types';\n\nexport const powerToggle = () => dispatch => {\n\tconsole.log('Power');\n\tdispatch({\n\t\ttype: POWER_TOGGLE\n\t});\n};\n\nexport const bankToggle = () => dispatch => {\n\tdispatch({\n\t\ttype: BANK_TOGGLE\t\n\t});\n};\n\nexport const volumeChange = (volume) => dispatch => {\n\tdispatch({\n\t\ttype: CHANGE_VOLUME,\n\t\tpayload: volume\n\t});\n};\n\nexport const updateButtonText = text => dispatch => {\n\tdispatch({\n\t\ttype: DISPLAY_BUTTON_NAME,\n\t\tpayload: text \n\t});\n};\n","/* Control Pad Actions*/\nexport const POWER_TOGGLE = 'POWER_TOGGLE';\nexport const BANK_TOGGLE = 'BANK_TOGGLE';\nexport const CHANGE_VOLUME = 'CHANGE_VOLUME';\n\n/* Button Pad Actions */\nexport const DISPLAY_BUTTON_NAME = 'DISPLAY_BUTTON_NAME';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { volumeChange, powerToggle, bankToggle } from '../../actions/SettingsAction';\n\nimport './ControlPad.css';\n\nclass ControlPad extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tvolume: 70\n\t\t};\n\t\n\t\tthis.onPowerToggle = this.onPowerToggle.bind(this);\n\t\tthis.onBankToggle = this.onBankToggle.bind(this);\n\t\tthis.onVolumeSlide = this.onVolumeSlide.bind(this);\n\t}\n\n\tonPowerToggle(e){\n\t\tthis.props.powerToggle();\n\t}\n\n\tonBankToggle(e){\n\t\tthis.props.bankToggle();\n\t}\n\n\tonVolumeSlide(e){\n\t\tthis.props.volumeChange(e.target.value/100);\n\t\tthis.setState({\n\t\t\tvolume: e.target.value\t\n\t\t});\t\t\n\t}\n\n\trender(){\n\t\t\n\t\treturn (\n\t\t\t<div className=\"ControlPad\">\n\t\t\t\t<div className=\"toggleControl\">\n\t\t\t\t\t<h3>Power</h3>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\tid=\"power-switch\"\n\t\t\t\t\t\tvalue= {this.state.powerOn}\n\t\t\t\t\t\tonChange={this.onPowerToggle} />\n\t\t\t\t\t<label htmlFor=\"power-switch\">Toggle</label>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"information-screen\">\n\t\t\t\t\t{this.props.btext}\t\n\t\t\t\t</div>\n\t\t\t\t<div >\n\t\t\t\t <input \n\t\t\t\t \tid=\"volume\" \n\t\t\t\t\tclassName=\"volume-control\" \n\t\t\t\t\tmax=\"100\" \n\t\t\t\t\tmin=\"0\" \n\t\t\t\t\ttype=\"range\" \n\t\t\t\t\tvalue= {this.state.volume}\n\t\t\t\t\tonChange={this.onVolumeSlide}\t\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"toggleControl\">\n\t\t\t\t\t<h3>Bank</h3>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\tid=\"bank-switch\"\n\t\t\t\t\t\tvalue={this.state.bankOn}\n\t\t\t\t\t\tonChange={this.onBankToggle}/>\n\t\t\t\t\t<label htmlFor=\"bank-switch\">Toggle</label>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tbtext: state.settings.btext\t\n});\n\nexport default connect(mapStateToProps, {volumeChange, powerToggle, bankToggle})(ControlPad);\n","import {POWER_TOGGLE, BANK_TOGGLE, CHANGE_VOLUME, DISPLAY_BUTTON_NAME } from '../actions/types';\n\nconst initialState = {\n\tpowerOn: false,\n\tbankOn: false,\n\tbtext: '',\n\tvolume: 0.7\n};\n\nexport const SettingsReducer = (state = initialState, action) => {\n\t\n\tswitch(action.type){\n\t\n\t\tcase POWER_TOGGLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpowerOn: !state.powerOn\n\t\t\t};\n\n\t\tcase BANK_TOGGLE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbankOn: !state.bankOn\n\t\t\t};\n\n\t\tcase CHANGE_VOLUME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvolume: action.payload\n\t\t\t};\n\n\t\tcase DISPLAY_BUTTON_NAME: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbtext: action.payload\n\t\t\t};\n\t\n\t\tdefault: \n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport { SettingsReducer} from './SettingsReducer';\n\nexport default combineReducers({\n\tsettings: SettingsReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcompose(\n\t\tapplyMiddleware(...middleware),\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\t)\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\n\nimport ButtonPad from './components/button-pad/ButtonPad';\nimport ControlPad from './components/control-pad/ControlPad';\n\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n\t<Provider store={store}>\n      <div className=\"App\">\n\t  \t<div className=\"container\">\n\t\t\t<ButtonPad />\n\t\t\t<ControlPad />\n\t\t</div>\n      </div>\n\t\n\t</Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}